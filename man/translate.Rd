% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate.R
\name{translate}
\alias{translate}
\title{Translate column values between languages}
\usage{
translate(
  df,
  col,
  rosetta_stone,
  from = "french",
  to = "english",
  category_selection = "."
)
}
\arguments{
\item{df}{A tibble containing the data.}

\item{col}{The name of the column to be translated.}

\item{rosetta_stone}{A tibble that serves as a translation dictionary, with columns
named after the languages it supports and a 'category' column.}

\item{from}{The name of the column in `rosetta_stone` representing the source language.}

\item{to}{The name of the column in `rosetta_stone` representing the target language.}

\item{category_selection}{Optional category selection to filter rows in `rosetta_stone`.}
}
\value{
A tibble with the translated column.
}
\description{
This function takes a tibble, a column to be translated, a dataset that acts
as a translation dictionary, and optional arguments specifying the languages
to translate from and to. It returns a tibble with the specified column's values
translated.
}
\details{
This is a convenience function to access translate_vec without a mutate step.
The function matches the values in the specified column of `df` with the
source language column in `rosetta_stone`. It then replaces the matched
values with the corresponding values from the target language column.
If a match is not found, the original value is retained.
}
\examples{
\dontrun{
rosetta <- tibble(french = c("le", "une"), english = c("the", "a"), category = "articles")
tibble(words = c("a", "the", "une", "le", "other")) \%>\%
  translate(words, rosetta, from = "french", to = "english", category_selection = "articles")
}

}
